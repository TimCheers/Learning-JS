console.log("Task 1 ->");
/*
üü© Task 1: –°–≤–æ–π—Å—Ç–≤–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è
–û–ø–∏—Å–∞–Ω–∏–µ:
–°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å Book.
–î–æ–±–∞–≤—å –ø–æ–ª–µ #title –∏ —Å–¥–µ–ª–∞–π –≥–µ—Ç—Ç–µ—Ä title, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏.
–ó–∞–ø—Ä–µ—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è.
–°–æ–∑–¥–∞–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∏ –ø—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ title –∏–∑–≤–Ω–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.
*/
class Book {
    #title;                     //—Ç.–∫. –ø–æ–ª–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ, –∑–∞–ø—Ä–µ—Ç –Ω–∞ –∑–∞–ø–∏—Å—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    constructor(title) {
        this.#title = title;
    }
    get title() {
        return this.#title;
    }
}
const x = new Book("QWERTY");
x.title = "WASD";
console.log(x.title);

console.log("\n\nTask 2 ->");
/*
üü© Task 2: –°–≤–æ–π—Å—Ç–≤–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
–û–ø–∏—Å–∞–Ω–∏–µ:
–°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å TemperatureSensor.
–°–¥–µ–ª–∞–π —Å–µ—Ç—Ç–µ—Ä temperature, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –≤–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º –ø—Ä–∏–≤–∞—Ç–Ω–æ–º –ø–æ–ª–µ.
–°–¥–µ–ª–∞–π —Ç–∞–∫, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –±—ã–ª–æ –Ω–µ–ª—å–∑—è (–±–µ–∑ –≥–µ—Ç—Ç–µ—Ä–∞).
–ü—Ä–æ–≤–µ—Ä—å —Ä–∞–±–æ—Ç—É, —É—Å—Ç–∞–Ω–æ–≤–∏–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π.
*/
class TemperatureSensor {
    #temperature;
    set temperature(t) {
        this.#temperature = t;
    }
}
const z = new TemperatureSensor();
z.temperature = -132;
console.log(z.temperature);


console.log("\n\nTask 3 ->");
/*
üü© Task 3: –°–≤–æ–π—Å—Ç–≤–∞ –±–µ–∑ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –ø–æ–ª—è–º
–û–ø–∏—Å–∞–Ω–∏–µ:
–°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å Rectangle.
–î–æ–±–∞–≤—å –¥–≤–∞ –ø—É–±–ª–∏—á–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤–∞ width –∏ height.
–°–æ–∑–¥–∞–π –≥–µ—Ç—Ç–µ—Ä area, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–ª–æ—â–∞–¥—å (width * height), –Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –æ—Ç–¥–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–∏.
–°–æ–∑–¥–∞–π –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ –∏ –≤—ã–≤–µ–¥–∏ –∏—Ö –ø–ª–æ—â–∞–¥–∏ —á–µ—Ä–µ–∑ –≥–µ—Ç—Ç–µ—Ä.
*/
class Rectangle {
    width;
    height;
    constructor(width, height) {
        this.width = width;
        this.height = height;
    }
    get area() {
        return this.width * this.height;
    }
}
const y1 = new Rectangle(2, 4);
const y2 = new Rectangle(5, 21);
const y3 = new Rectangle(3, 4);
console.log(y1.area);
console.log(y2.area);
console.log(y3.area);


console.log("\n\nTask 4 ->");
/*
üü© Task 4: –ì–µ—Ç—Ç–µ—Ä –∏ —Å–µ—Ç—Ç–µ—Ä —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
–û–ø–∏—Å–∞–Ω–∏–µ:
–°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å User.
–î–æ–±–∞–≤—å –ø–æ–ª–µ #age.
–ì–µ—Ç—Ç–µ—Ä age –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –≤–æ–∑—Ä–∞—Å—Ç, –∞ —Å–µ—Ç—Ç–µ—Ä ‚Äî —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –µ–≥–æ, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤–æ–∑—Ä–∞—Å—Ç –±–æ–ª—å—à–µ 0.
–°–æ–∑–¥–∞–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–ø—Ä–æ–±—É–π –∑–∞–¥–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç.
*/
class User {
    #age;
    get age() {
        return this.#age;
    }
    set age(age) {
        if (age > 0) {
            this.#age = age;
        }
        else {
            console.warn("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç!");
        }
    }
}
const tim = new User();
tim.age = 34;
tim.age = -5;
console.log(tim.age);


console.log("\n\nTask 5 ->");
/*
üü© Task 5: –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π
–û–ø–∏—Å–∞–Ω–∏–µ:
–°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å Circle —Å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º –ø–æ–ª–µ–º #radius.
–î–æ–±–∞–≤—å:
–≥–µ—Ç—Ç–µ—Ä radius (—á—Ç–µ–Ω–∏–µ —Ä–∞–¥–∏—É—Å–∞),
—Å–µ—Ç—Ç–µ—Ä diameter (–∏–∑–º–µ–Ω—è–µ—Ç —Ä–∞–¥–∏—É—Å –Ω–∞ –ø–æ–ª–æ–≤–∏–Ω—É –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ –¥–∏–∞–º–µ—Ç—Ä–∞),
–≥–µ—Ç—Ç–µ—Ä area (–≤—ã—á–∏—Å–ª—è–µ—Ç –ø–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞).
–ü—Ä–æ–≤–µ—Ä—å, –∫–∞–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∏–∞–º–µ—Ç—Ä–∞ –≤–ª–∏—è—é—Ç –Ω–∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.
*/
class Circle {
    #radius = 15;
    get radius() {
        return this.#radius;
    }
    set diameter(val) {
        if (val > 0) {
            this.#radius = val / 2;
        }
        else{
            console.warn("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!");
        }
    }
    get area(){
        return 3.14 * Math.pow(this.#radius, 2);
    }
}
const q = new Circle();
console.log(structuredClone(q.radius));
console.log(structuredClone(q.area));
q.diameter = 40;
console.log(structuredClone(q.radius));
console.log(structuredClone(q.area));